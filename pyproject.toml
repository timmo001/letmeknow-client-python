[tool.poetry]
name = "letmeknowclient"
version = "0.4.1"
description = "Python client for LetMeKnow."
authors = ["Aidan Timson <aidan@timmo.dev>"]
maintainers = ["Aidan Timson <aidan@timmo.dev>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/timmo001/letmeknow"
repository = "https://github.com/timmo001/letmeknow"
documentation = "https://github.com/timmo001/letmeknow"
keywords = ["LetMeKnow", "client", "aiohttp"]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Framework :: AsyncIO",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{ include = "letmeknowclient", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
aiohttp = ">=3.0.0"
yarl = ">=1.6.0"

[tool.poetry.group.dev.dependencies]
aresponses = "3.0.0"
codespell = "2.3.0"
covdefaults = "2.3.0"
coverage = { version = "7.6.0", extras = ["toml"] }
mypy = "1.10.1"
pre-commit = "3.7.1"
pre-commit-hooks = "4.6.0"
pylint = "3.2.5"
pytest = "8.2.2"
pytest-asyncio = "0.23.7"
pytest-cov = "5.0.0"
ruff = "0.5.2"
safety = "3.2.4"
yamllint = "1.35.1"
syrupy = "4.6.1"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/timmo001/letmeknow/issues"
Changelog = "https://github.com/timmo001/letmeknow/releases"

[tool.coverage.report]
show_missing = true

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["letmeknowclient"]

[tool.mypy]
# Specify the target platform details in config, so your developers are
# free to run mypy on Windows, Linux, or macOS and get consistent
# results.
platform = "linux"
python_version = "3.11"

# show error messages from unrelated files
follow_imports = "normal"

# suppress errors about unsatisfied imports
ignore_missing_imports = true

# be strict
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_optional = true
warn_incomplete_stub = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pylint.MASTER]
ignore = ["tests"]

[tool.pylint.BASIC]
good-names = ["_", "ex", "fp", "i", "id", "j", "k", "on", "Run", "T"]

[tool.pylint.DESIGN]
max-attributes = 8

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "duplicate-code",
    "format",
    "unsubscriptable-object",
    "too-many-instance-attributes",
    "wrong-import-order",
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length = 88

[tool.pytest.ini_options]
addopts = "--cov"
asyncio_mode = "auto"

[tool.ruff.lint]
ignore = [
    "ANN101",  # Self... explanatory
    "ANN102",  # cls... just as useless
    "ANN401",  # Opinioated warning on disallowing dynamically typed expressions
    "COM812",  # Conflicts with other rules
    "D203",    # Conflicts with other rules
    "D213",    # Conflicts with other rules
    "D417",    # False positives in some occasions
    "PLR2004", # Just annoying, not really useful
    "ISC001",  # Conflicts with other rules
]
select = ["ALL"]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["letmeknowclient"]
force-sort-within-sections = true
split-on-trailing-comma = false
combine-as-imports = true

[tool.ruff.lint.mccabe]
max-complexity = 25

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=1.0.0"]
